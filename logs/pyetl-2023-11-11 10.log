2023-11-11 10:04:18,119 - [INFO] - logging_util.py[33]: test info
2023-11-11 10:04:18,265 - [INFO] - json_service.py[15]: Processing JSON data, the program has started...
2023-11-11 10:04:18,266 - [INFO] - json_service.py[20]: Inspecting the JSON folder, the following files are found: ['/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9888.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9889.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9887.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9886.txt']
2023-11-11 10:04:18,325 - [INFO] - mysql_util.py[37]: Processing localhost:3306 database connection...
2023-11-11 10:04:18,327 - [INFO] - mysql_util.py[37]: Processing localhost:3306 database connection...
2023-11-11 10:04:18,335 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 0 results.
2023-11-11 10:04:18,345 - [INFO] - mysql_util.py[80]: Create table: file_monitor to DB: metadata. SQL: CREATE TABLE file_monitor(
    id INT PRIMARY KEY AUTO_INCREMENT,
    file_name VARCHAR(255) UNIQUE NOT NULL COMMENT 'Processed file names',
    process_lines INT COMMENT 'Processed lines',
    process_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Processing time'
).
2023-11-11 10:04:18,346 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 0 results.
2023-11-11 10:04:18,346 - [INFO] - json_service.py[30]: After query MySQL, found below files already processed: $[]
2023-11-11 10:04:18,346 - [INFO] - json_service.py[33]: We found files need to be process after compared with MySQL：['/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9888.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9889.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9887.txt', '/Users/kityua/PycharmProjects-gaoji/ETL-Python/json/x9886.txt']
2023-11-11 10:04:18,351 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 0 results.
2023-11-11 10:04:18,360 - [INFO] - mysql_util.py[80]: Create table: orders to DB: retail. SQL: CREATE TABLE orders(order_id VARCHAR(255) PRIMARY KEY, store_id INT COMMENT '店铺ID', store_name VARCHAR(30) COMMENT '店铺名称', store_status VARCHAR(10) COMMENT '店铺状态(open, close)', store_own_user_id INT COMMENT '店主id', store_own_user_name VARCHAR(50) COMMENT '店主名称', store_own_user_tel VARCHAR(30) COMMENT '店主手机号', store_category VARCHAR(10) COMMENT '店铺类型(normal, test)', store_address VARCHAR(255) COMMENT '店铺地址', store_shop_no VARCHAR(255) COMMENT '店铺第三方支付id号', store_province VARCHAR(10) COMMENT '店铺所在省', store_city VARCHAR(10) COMMENT '店铺所在市', store_district VARCHAR(10) COMMENT '店铺所在行政区', store_gps_name VARCHAR(255) COMMENT '店铺gps名称', store_gps_address VARCHAR(255) COMMENT '店铺gps地址', store_gps_longitude VARCHAR(255) COMMENT '店铺gps经度', store_gps_latitude VARCHAR(255) COMMENT '店铺gps纬度', is_signed TINYINT COMMENT '是否第三方支付签约(0,1)', operator VARCHAR(10) COMMENT '操作员', operator_name VARCHAR(50) COMMENT '操作员名称', face_id VARCHAR(255) COMMENT '顾客面部识别ID', member_id VARCHAR(255) COMMENT '顾客会员ID', store_create_date_ts TIMESTAMP COMMENT '店铺创建时间', origin VARCHAR(255) COMMENT '原始信息(无用)', day_order_seq INT COMMENT '本订单是当日第几单', discount_rate DECIMAL(10, 5) COMMENT '折扣率', discount_type TINYINT COMMENT '折扣类型', discount DECIMAL(10, 5) COMMENT '折扣金额', money_before_whole_discount DECIMAL(10, 5) COMMENT '折扣前总金额', receivable DECIMAL(10, 5) COMMENT '应收金额', erase DECIMAL(10, 5) COMMENT '抹零金额', small_change DECIMAL(10, 5) COMMENT '找零金额', total_no_discount DECIMAL(10, 5) COMMENT '折扣前总金额', pay_total DECIMAL(10, 5) COMMENT '付款金额', pay_type VARCHAR(10) COMMENT '付款类型', payment_channel TINYINT COMMENT '付款通道', payment_scenarios VARCHAR(15) COMMENT '付款描述(无用)', product_count INT COMMENT '本单卖出多少商品', date_ts TIMESTAMP COMMENT '订单时间', INDEX (receivable), INDEX (date_ts)).
2023-11-11 10:04:18,361 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 1 results.
2023-11-11 10:04:18,365 - [INFO] - mysql_util.py[80]: Create table: orders_detail to DB: retail. SQL: CREATE TABLE orders_detail(order_id VARCHAR(255) COMMENT 'Order ID', barcode VARCHAR(255) COMMENT 'Product barcode', name VARCHAR(255) COMMENT 'Product name', count VARCHAR(255) COMMENT 'Product amount', price_per VARCHAR(255) COMMENT 'Product per price', retail_price VARCHAR(255) COMMENT 'Product retail price', trade_price VARCHAR(255) COMMENT 'Product trade price', category_id VARCHAR(255) COMMENT 'Product category ID', unit_id VARCHAR(255) COMMENT 'Product unit ID', PRIMARY KEY (order_id, barcode)).
2023-11-11 10:04:18,370 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,370 - [INFO] - mysql_util.py[82]: Table orders exist in DB: retail, skip create table.
2023-11-11 10:04:18,371 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,371 - [INFO] - mysql_util.py[82]: Table orders_detail exist in DB: retail, skip create table.
2023-11-11 10:04:18,373 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,373 - [INFO] - mysql_util.py[82]: Table orders exist in DB: retail, skip create table.
2023-11-11 10:04:18,374 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,374 - [INFO] - mysql_util.py[82]: Table orders_detail exist in DB: retail, skip create table.
2023-11-11 10:04:18,376 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,376 - [INFO] - mysql_util.py[82]: Table orders exist in DB: retail, skip create table.
2023-11-11 10:04:18,377 - [INFO] - mysql_util.py[48]: The SQL query has been executed, and there is 2 results.
2023-11-11 10:04:18,377 - [INFO] - mysql_util.py[82]: Table orders_detail exist in DB: retail, skip create table.
2023-11-11 10:04:18,379 - [INFO] - json_service.py[117]: Finished CSV back up，write to：/Users/kityua/PycharmProjects-gaoji/ETL-Python/output/retail-csv/
2023-11-11 10:04:18,379 - [INFO] - json_service.py[118]: Finished store data to MySQL Processed ：6 data
2023-11-11 10:04:18,381 - [INFO] - json_service.py[135]: Reading JSON data and inserting into MySQL, as well as creating a CSV backup, have been completed.
